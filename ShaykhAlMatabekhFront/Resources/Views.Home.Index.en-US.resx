<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTitle" xml:space="preserve">
    <value>WHO WE ARE ??</value>
  </data>
  <data name="casework" xml:space="preserve">
    <value>casework</value>
  </data>
  <data name="CompletingtheWorkWithTheRequiredQualityandTime" xml:space="preserve">
    <value>Completing the work with the required quality and time</value>
  </data>
  <data name="Completionofinvestmentprojects" xml:space="preserve">
    <value>Completion of investment projects</value>
  </data>
  <data name="Creatingentertainmentprojects" xml:space="preserve">
    <value>Creating entertainment projects</value>
  </data>
  <data name="DistinguishedIndustrialProjects" xml:space="preserve">
    <value>Distinguished Industrial Projects</value>
  </data>
  <data name="Distinguishedlevelofluxury" xml:space="preserve">
    <value>Distinguished level of luxury</value>
  </data>
  <data name="Exteriorfinishes" xml:space="preserve">
    <value>Exterior finishes</value>
  </data>
  <data name="FirstService" xml:space="preserve">
    <value>We offer the best to premium homeowners and commercial industries Custom kitchens and cabinets</value>
  </data>
  <data name="FourthService" xml:space="preserve">
    <value>We offer a wide range of products that satisfy different tastes, from classic to modern to bespoke design</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="HugeProjectsinSaudiArabia" xml:space="preserve">
    <value>Huge Projects in Saudi Arabia</value>
  </data>
  <data name="Ingenuityofdesignandexecution" xml:space="preserve">
    <value>Ingenuity of design and execution</value>
  </data>
  <data name="KitchenCabinets" xml:space="preserve">
    <value>Kitchen Cabinets</value>
  </data>
  <data name="Kitchens" xml:space="preserve">
    <value>Kitchens</value>
  </data>
  <data name="OurProducts" xml:space="preserve">
    <value>Our Products</value>
  </data>
  <data name="OurServices" xml:space="preserve">
    <value>Our Services</value>
  </data>
  <data name="OurServicesDetails" xml:space="preserve">
    <value>-	Implementation of construction and finishing works for commercial and residential buildings
-	Implementation of the construction and finishing of industrial facilities
-	Implementation of the construction and finishing of investment projects (hospitals - malls - administrative buildings - complexes)
-Implementation of infrastructure works</value>
  </data>
  <data name="photoTitleHome" xml:space="preserve">
    <value>SHEIKH KITCHENS</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="receivingCounters" xml:space="preserve">
    <value>Nursing stations receiving counters</value>
  </data>
  <data name="SecondService" xml:space="preserve">
    <value>New designs and items are constantly developed by our talented designers to bring innovation to different styles of kitchens and cabinets.</value>
  </data>
  <data name="ShowProjects" xml:space="preserve">
    <value>Show Products</value>
  </data>
  <data name="Strive" xml:space="preserve">
    <value>We Strive to keep pace with Visoin 2030</value>
  </data>
  <data name="ThirdService" xml:space="preserve">
    <value>We are always up to date with new trends affecting the world of kitchens and related technologies.</value>
  </data>
  <data name="TitleSlider1" xml:space="preserve">
    <value>ART, QUALITY AND LIFESTYLE</value>
  </data>
  <data name="ViewPromoVideo" xml:space="preserve">
    <value>View Promo Video</value>
  </data>
  <data name="WeKeenToProvideTheBest" xml:space="preserve">
    <value>We Keen To Provide The Best</value>
  </data>
  <data name="WhoAreWe" xml:space="preserve">
    <value>The company was founded in 1986 in the heart In Saudi Arabia, Sheikh Kitchens is the oldest name in the kitchen and joints industry. Banking on decades of family heritage, we've followed Steps of our great organization.
&lt;br&gt;&lt;br&gt;
Sheikh Kitchens is a dynamic, innovative and unwavering company Commitment to using its extensive technical and industry knowledge to achieve Complete customer satisfaction.
Focusing on achieving our ambitious goals and striving to achieve our ambition Plans, Sheikh Kitchens is a team that works closely with designers and architects International reputation in providing all kinds of custom solutions Customized work environments, in addition to our standard products.</value>
  </data>
</root>