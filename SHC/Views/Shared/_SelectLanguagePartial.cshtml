@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@inject IViewLocalizer Localizer

@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    //var cultureItems = LocOptions.Value.SupportedUICultures
    //    .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
    //    .ToList();

    List<SelectListItem> cultureItems = new List<SelectListItem>() {
        new SelectListItem(){
            Text="English",
            Value = "en-US"
        },
        new SelectListItem(){
            Text="العربية",
            Value = "ar-SA"
        }
    };
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<script src="~/lib/moment.js/2.24.0/Content/Scripts/moment.js"></script>

<div title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" asp-controller="Home"
          asp-action="SetLanguage" asp-route-returnUrl="@returnUrl"
          method="post" class="form-horizontal" role="form">
        <label asp-for="@requestCulture.RequestCulture.UICulture.Name">@Localizer["Language"]</label>
        <select id="lstSelectLang" name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems"></select>
    </form>
</div>
